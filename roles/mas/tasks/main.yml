---
- name: Ensure MAS is installed.
  homebrew:
    name: mas
    state: present

- name: Get MAS account status
  command: mas account
  register: mas_account_result
  failed_when: mas_account_result.rc > 1
  check_mode: false
  changed_when: false
  when:
    - ansible_distribution_version is version('12', '<')

- name: Sign in to MAS when email and password are provided.
  command: 'mas signin "{{ mas_email }}" "{{ mas_password }}"'
  register: mas_signin_result
  when:
    - ansible_distribution_version is version('10.13', '<')
    - mas_account_result.rc == 1
    - mas_email is truthy
    - mas_password is truthy
    - not mas_signin_dialog

- name: Sign in to MAS when email is provided, and complete password and 2FA using dialog.
  command: 'mas signin "{{ mas_email }}" "{{ mas_password }}" --dialog'
  register: mas_signin_result
  when:
    - ansible_distribution_version is version('10.13', '<')
    - mas_signin_dialog
    - mas_account_result.rc == 1
    - mas_email is truthy

- name: List installed MAS apps.
  command: mas list
  register: mas_list
  check_mode: false
  changed_when: false

- name: Ensure unwanted MAS apps are uninstalled.
  command: mas uninstall "{{ item.id | default(item) }}"
  with_items: "{{ mas_uninstalled_apps }}"
  when: (item.id | default(item) | string) in mas_list.stdout

- name: Ensure configured MAS apps are installed.
  command: mas install "{{ item.id | default(item) }}"
  with_items: "{{ mas_installed_apps + mas_installed_app_ids }}"
  when: (item.id | default(item) | string) not in mas_list.stdout

- name: Upgrade all apps (if configured).
  command: mas upgrade
  when: mas_upgrade_all_apps
